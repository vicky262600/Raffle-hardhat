import { HardhatNetworkAccountsConfig, HardhatNetworkHDAccountsConfig, HttpNetworkAccountsConfig, Network } from 'hardhat/types';
import { Provider, Wallet } from 'zksync-ethers';
export declare function getWallet(network: Network, provider: Provider, privateKeyOrIndex?: string | number): Promise<Wallet>;
export declare function getWallets(network: Network, provider: Provider): Promise<Wallet[]>;
export declare function isHardhatNetworkHDAccountsConfig(object: any): object is HardhatNetworkHDAccountsConfig;
export declare function isHardhatNetworkAccountsConfigStrings(object: any): object is string[];
export declare function isString(object: any): object is string;
export declare function isNumber(object: any): object is number;
export declare function getWalletsFromAccount(network: Network, provider: Provider, accounts: HardhatNetworkAccountsConfig | HttpNetworkAccountsConfig): Promise<Wallet[]>;
export declare function findWalletFromAddress(address: string, network: Network, provider: Provider, wallets?: Wallet[]): Promise<Wallet | undefined>;
export declare function getSignerAccounts(network: Network, provider: Provider): Promise<string[]>;
export declare function getRichWalletsIfPossible(provider: Provider): Promise<Wallet[]>;
export declare function isImpersonatedSigner(provider: Provider, address: string): Promise<boolean>;
//# sourceMappingURL=utils.d.ts.map